{"ast":null,"code":"var _jsxFileName = \"/Users/clayreimus/Documents/api_directory/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nconst PokemonType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.shape({\n    english: PropTypes.string.isRequired,\n    japanese: PropTypes.string.isRequired,\n    chinese: PropTypes.string.isRequired,\n    french: PropTypes.string.isRequired\n  }),\n  type: PropTypes.arrayOf(PropTypes.string.isRequired),\n  base: PropTypes.shape({\n    HP: PropTypes.number.isRequired,\n    Attack: PropTypes.number.isRequired,\n    Defense: PropTypes.number.isRequired,\n    'Sp. Attack': PropTypes.number.isRequired,\n    'Sp. Defense': PropTypes.number.isRequired,\n    Speed: PropTypes.number.isRequired\n  })\n});\n\nconst PokemonRow = ({\n  pokemon,\n  onClick\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n  key: pokemon.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, pokemon.name), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  onClick: () => onClick(pokemon),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, \"More Information\"))));\n\nPokemonRow.propTypes = {\n  pokemon: PropTypes.arrayOf(PokemonType)\n};\n\nconst PokemonInfo = ({\n  name: {\n    english\n  },\n  base\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}, english), /*#__PURE__*/React.createElement(\"table\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }\n}, Object.keys(base).map(key => /*#__PURE__*/React.createElement(\"tr\", {\n  key: key,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }\n}, key), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }\n}, base[key]))))));\n\nPokemonInfo.propTypes = PokemonType;\n\nfunction App() {\n  const [filter, filterSet] = React.useState('');\n  const [pokemon, pokemonSet] = React.useState([]);\n  const [selectedPokemon, selectedPokemonSet] = React.useState(null);\n  React.useEffect(() => {\n    fetch('https://api.github.com/repos/Roll20/roll20-api-scripts/contents/').then(resp => resp.json()).then(data => pokemonSet(data));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 'auto',\n      width: 800,\n      paddingTop: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Pokemon Search\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '80% 20%',\n      gridColumnGap: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: filter,\n    onChange: evt => filterSet(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, pokemon.filter(name => name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())).slice(0, 20).map(pokemon => /*#__PURE__*/React.createElement(PokemonRow, {\n    pokemon: pokemon,\n    onClick: pokemon => selectedPokemonSet(pokemon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }))))), selectedPokemon && /*#__PURE__*/React.createElement(PokemonInfo, Object.assign({}, selectedPokemon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/clayreimus/Documents/api_directory/src/App.js"],"names":["React","PropTypes","PokemonType","shape","id","string","isRequired","name","english","japanese","chinese","french","type","arrayOf","base","HP","number","Attack","Defense","Speed","PokemonRow","pokemon","onClick","propTypes","PokemonInfo","Object","keys","map","key","App","filter","filterSet","useState","pokemonSet","selectedPokemon","selectedPokemonSet","useEffect","fetch","then","resp","json","data","margin","width","paddingTop","display","gridTemplateColumns","gridColumnGap","evt","target","value","toLocaleLowerCase","includes","slice"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './App.css'\n\nconst PokemonType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.shape({\n    english: PropTypes.string.isRequired,\n    japanese: PropTypes.string.isRequired,\n    chinese: PropTypes.string.isRequired,\n    french: PropTypes.string.isRequired,\n  }),\n  type: PropTypes.arrayOf(PropTypes.string.isRequired),\n  base: PropTypes.shape({\n    HP: PropTypes.number.isRequired,\n    Attack: PropTypes.number.isRequired,\n    Defense: PropTypes.number.isRequired,\n    'Sp. Attack': PropTypes.number.isRequired,\n    'Sp. Defense': PropTypes.number.isRequired,\n    Speed: PropTypes.number.isRequired,\n  }),\n})\n\nconst PokemonRow = ({ pokemon, onClick }) => (\n  <>\n    <tr key={pokemon.id}>\n      <td>{pokemon.name}</td>\n      <td></td>\n      <td>\n        <button onClick={() => onClick(pokemon)}>More Information</button>\n      </td>\n    </tr>\n  </>\n)\n\nPokemonRow.propTypes = {\n  pokemon: PropTypes.arrayOf(PokemonType),\n}\n\nconst PokemonInfo = ({ name: { english }, base }) => (\n  <div>\n    <h2>{english}</h2>\n    <table>\n      <tbody>\n        {Object.keys(base).map((key) => (\n          <tr key={key}>\n            <td>{key}</td>\n            <td>{base[key]}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n)\n\nPokemonInfo.propTypes = PokemonType\n\nfunction App() {\n  const [filter, filterSet] = React.useState('')\n  const [pokemon, pokemonSet] = React.useState([])\n  const [selectedPokemon, selectedPokemonSet] = React.useState(null)\n\n  React.useEffect(() => {\n    fetch('https://api.github.com/repos/Roll20/roll20-api-scripts/contents/')\n      .then((resp) => resp.json())\n      .then((data) => pokemonSet(data))\n  }, [])\n\n  return (\n    <div\n      style={{\n        margin: 'auto',\n        width: 800,\n        paddingTop: '1em',\n      }}\n    >\n      <h1 className=\"title\">Pokemon Search</h1>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: '80% 20%',\n          gridColumnGap: '1rem',\n        }}\n      >\n        <div>\n          <input\n            type=\"text\"\n            value={filter}\n            onChange={(evt) => filterSet(evt.target.value)}\n          />\n          <table width=\"100%\">\n            <tbody>\n              {pokemon\n                .filter((name) =>\n                  name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n                )\n                .slice(0, 20)\n                .map((pokemon) => (\n                  <PokemonRow\n                    pokemon={pokemon}\n                    onClick={(pokemon) => selectedPokemonSet(pokemon)}\n                  />\n                ))}\n            </tbody>\n          </table>\n        </div>\n        {selectedPokemon && <PokemonInfo {...selectedPokemon} />}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}